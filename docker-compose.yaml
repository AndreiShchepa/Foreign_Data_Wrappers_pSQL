services:
  postgres:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: pdb_postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: demo
    volumes:
      - ./init/postgres:/docker-entrypoint-initdb.d
      - ./init/data:/data
    networks:
      - pdb_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:7.0
    container_name: pdb_mongo
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongodb
      MONGO_INITDB_DATABASE: admin
    volumes:
      - ./init/mongo:/docker-entrypoint-initdb.d
      - ./init/data:/data
    networks:
      - pdb_network
    command: mongod --bind_ip_all

  mysql:
    image: mysql:8.0
    container_name: pdb_mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_DATABASE: product_db
      MYSQL_USER: mysql
      MYSQL_PASSWORD: mysql
    volumes:
      - ./init/mysql:/docker-entrypoint-initdb.d
      - ./init/data:/data
    networks:
      - pdb_network

networks:
  pdb_network:
    driver: bridge
